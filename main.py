import telebot
from telebot import types
import threading
import time
import json
import os
import requests

API_TOKEN = ''
CHANNEL_USERNAME = '@kzn_code'  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –∏–º—è –≤–∞—à–µ–≥–æ –∫–∞–Ω–∞–ª–∞

bot = telebot.TeleBot(API_TOKEN)

# –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –¥–ª—è –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ API Telegram
telebot.apihelper.CONNECT_TIMEOUT = 30
telebot.apihelper.READ_TIMEOUT = 60

# –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
USERS_FILE = 'users.json'

# –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ —Ñ–∞–π–ª–∞
if os.path.exists(USERS_FILE):
    with open(USERS_FILE, 'r') as file:
        users_dataset = json.load(file)
else:
    users_dataset = {}

@bot.message_handler(commands=['help', 'start'])
def send_welcome(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button = types.KeyboardButton("–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç", request_contact=True)
    markup.add(button)

    bot.send_message(message.chat.id, """\
    –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –í–∞—Å –Ω–∞ –Ω–∞—à–µ–º –º–∏–Ω–∏-–∫—É—Ä—Å–µ ¬´–õ–∏—á–Ω—ã–π –ë—Ä–µ–Ω–¥ —Å 0¬ª! üéôÔ∏è

–ó–¥–µ—Å—å –≤—ã —É–∑–Ω–∞–µ—Ç–µ –≤—Å–µ –æ –õ–∏—á–Ω–æ–º –ë—Ä–µ–Ω–¥–µ: —á—Ç–æ —ç—Ç–æ —Ç–∞–∫–æ–µ, –¥–ª—è —á–µ–≥–æ, –∫–æ–º—É –æ–Ω –Ω–µ –Ω—É–∂–µ–Ω, —Ä–∞–∑–±–µ—Ä–µ—Ç–µ—Å—å –≤ –∞—Ç—Ä–∏–±—É—Ç–∞—Ö –±—Ä–µ–Ω–¥–∞ –∏ —Ä–∞–∑–≤–µ–µ—Ç–µ –≤—Å–µ –º–∏—Ñ—ã ¬´–¥–æ—Ä–æ–≥–æ¬ª, ¬´–¥–æ–ª–≥–æ¬ª –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ.

–î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –º–∏–Ω–∏-–∫—É—Ä—Å—É –Ω—É–∂–Ω–æ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å —Å–≤–æ–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã.
    """, reply_markup=markup)

@bot.message_handler(commands=['tellall'])
def handle_command(message):
    text = message.text
    parts = text.split(' ', 1)
    command, params = parts
    for key in users_dataset.keys():
        bot.send_message(key, params)

@bot.message_handler(content_types=['contact'])
def handle_contact(message):
    if message.contact is not None:
        user_id = message.contact.user_id
        phone_number = message.contact.phone_number
        user_link = message.from_user.username
        chat_id = message.chat.id

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ñ–∞–π–ª
        users_dataset[chat_id] = {
            'phone_number': phone_number,
            'user_link': user_link,
            'user_id': user_id,
            'chat_id': chat_id,
            'timetoget': 0,
            'secondl': 0,
        }
        with open(USERS_FILE, 'w') as file:
            json.dump(users_dataset, file, indent=4)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π "–ù–∞—á–∞—Ç—å"
        markup = types.InlineKeyboardMarkup()
        button1 = types.InlineKeyboardButton("–î–∞–ª–µ–µ", callback_data='startcourse')
        markup.add(button1)

        bot.send_message(message.chat.id, """\
        –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!

–ß—Ç–æ–±—ã –æ—Å—Ç–∞–≤–∞—Ç—å—Å—è –≤ –∫—É—Ä—Å–µ –≤—Å–µ—Ö –Ω–æ–≤–æ—Å—Ç–µ–π –≤ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–µ, –∫–æ–Ω—Ç–µ–Ω—Ç–µ –∏ –ø–∏–∞—Ä–µ üëâ –ø–æ–¥–ø–∏—Å—ã–≤–∞–π—Å—è –Ω–∞ –º–æ–π –∫–∞–Ω–∞–ª ‚¨áÔ∏è
@kokobongaclub
        """, reply_markup=markup)

@bot.callback_query_handler(func=lambda call: True)
def callback_query(call):
    if call.data == 'startcourse':
        if is_subscribed(call.message.chat.id):
            bot.send_message(call.message.chat.id, """\
                    –≠—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ –º–∏–Ω–∏-–∫—É—Ä—Å —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π, —Å—é–¥–∞ –º—ã —Å –∫–æ–º–∞–Ω–¥–æ–π –≤–ª–æ–∂–∏–ª–∏ –º–æ–∏ –∑–Ω–∞–Ω–∏—è –∏ –æ–ø—ã—Ç —Å 2009, –∫–æ—Ç–æ—Ä—ã–π —Ç–æ—á–Ω–æ –Ω–µ —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞—é—Ç –≤ —Ä–∏–ª—Å–∞—Ö üí°

–ü–æ—ç—Ç–æ–º—É –º—ã –ø—Ä–æ—Ä–∞–±–æ—Ç–∞–µ–º –≤–∞—à–µ –º—ã—à–ª–µ–Ω–∏–µ, —Å–Ω–∏–º–µ–º –≤–∞—à–∏ ¬´—Ä–æ–∑–æ–≤—ã–µ –æ—á–∫–∏¬ª –Ω–∞—Å—á–µ—Ç –õ–î

–ê –≤ –∫–æ–Ω—Ü–µ –≤–∞—Å –∂–¥–µ—Ç –°–ï–ö–†–ï–¢–ù–´–ô –ë–û–ù–£–°–ù–´–ô –£–†–û–ö ü§´ –∫–æ—Ç–æ—Ä—ã–π –≤—ã –Ω–µ –ø–æ–ª—É—á–∏—Ç–µ –¥–∞–∂–µ –Ω–∞ –ø–ª–∞—Ç–Ω—ã—Ö –∫—É—Ä—Å–∞—Ö
                    """)
            try:
                video_id = 'BAACAgIAAxkBAAMNZ11j0nf9MmL1snDN-AagJE0tfKYAAlhcAAIriOlK88QSgNY4PdY2BA'
#                 bot.send_video(call.message.chat.id, video_id, caption="""\
#                 –ú—ã —Å –≤–∞–º–∏ —Ä–∞–∑–±–µ—Ä–µ–º —á—Ç–æ —Ç–∞–∫–æ–µ –ª–∏—á–Ω—ã–π –±—Ä–µ–Ω–¥, –∑–∞—á–µ–º –æ–Ω –Ω—É–∂–µ–Ω, –∞ —Ç–∞–∫–∂–µ –æ–Ω–ª–∞–π–Ω –∏ –æ—Ñ–ª–∞–π–Ω –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è
#
# (–û–±–µ—â–∞–Ω–Ω–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ –º–æ–π –∫—É—Ä—Å ¬´–î–∏–∑–∞–π–Ω —á–µ–ª–æ–≤–µ–∫–∞ –¥–ª—è —Å–µ–±—è¬ª ‚¨áÔ∏è)
# http://kokobonga.ru/course
#
# –°–ª–µ–¥—É—é—â–µ–µ –≤–∏–¥–µ–æ —Ç—ã –ø–æ–ª—É—á–∏—à—å —á–µ—Ä–µ–∑ 24 —á–∞—Å–∞""")
                bot.send_message(call.message.chat.id, "–£—Ä–æ–∫ 1")
                users_dataset[f'{call.message.chat.id}']["secondl"] = 1
                print(call.message.from_user.id)
                print(call.message.from_user.is_bot)
                users_dataset[f'{call.message.chat.id}']["timetoget"]=24*60*60
                print(f"{users_dataset[f'{call.message.chat.id}']['timetoget']}")
                print("Changed!")
            except requests.exceptions.ReadTimeout:
                bot.send_message(call.message.chat.id,
                                 "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤–∏–¥–µ–æ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

            with open(USERS_FILE, 'w') as file:
                json.dump(users_dataset, file, indent=4)

            send_check_time_keyboard(call.message.chat.id)
        else:
            bot.send_message(call.message.chat.id, "–í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª")
    elif call.data=='get_gift':
        bot.send_message(call.message.chat.id,"–û–∂–∏–¥–∞–π, —Å–∫–æ—Ä–æ —Å —Ç–æ–±–æ–π —Å–≤—è–∂–µ–º—Å—è!")
        bot.send_message(call.message.chat.id, f"{users_dataset[str(call.message.chat.id)]['user_link']} ({users_dataset[str(call.message.chat.id)]['phone_number']}) –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É –ü–æ–ª—É—á–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫")

def send_second_video(user_id, chat_id):
    video_id = 'BAACAgIAAxkBAAMUZ11kW64bSDlxkQE-SvGChmMjT-4AAkVZAAIriOlKnfldt_39u0w2BA'  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –ø—É—Ç—å –∫ –≤–∞—à–µ–º—É –ª–æ–∫–∞–ª—å–Ω–æ–º—É –≤–∏–¥–µ–æ—Ñ–∞–π–ª—É –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —É—Ä–æ–∫–∞
    try:
#         bot.send_video(user_id, video_id, caption="""\
#         24 —á–∞—Å–∞ –ø—Ä–æ—à–ª–æ, –¥–µ—Ä–∂–∏ —Å–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–∫
#
# –†–∞–∑–±–∏—Ä–∞–µ–º –∫–∞–∫–∏–µ —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏ –º–æ–≥—É—Ç –≤–æ–∑–Ω–∏–∫–Ω—É—Ç—å, –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –±–∞—Ä—å–µ—Ä—ã –∏ –∫–∞–∫ –ø—Ä–µ–æ–¥–æ–ª–µ—Ç—å –≤—Å–µ —Å—Ç—Ä–∞—Ö–∏
#
# –ü–æ—Å–ª–µ–¥–Ω–∏–π —É—Ä–æ–∫ —Ç—ã –ø–æ–ª—É—á–∏—à—å —Ç–∞–∫ –∂–µ —á–µ—Ä–µ–∑ 24 —á–∞—Å–∞""")
        bot.send_message(user_id, "–£—Ä–æ–∫ 2")
        users_dataset[f'{chat_id}']["timetoget"] = 24*60*60
        print(f"{users_dataset[f'{chat_id}']['timetoget']}")
        print("Changed!")
        with open(USERS_FILE, 'w') as file:
            json.dump(users_dataset, file, indent=4)
    except requests.exceptions.ReadTimeout:
        bot.send_message(user_id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤–∏–¥–µ–æ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

def send_third_video(user_id, chat_id):
    video_id = 'BAACAgIAAxkBAAMWZ11kc9UlRabdoQeZxrHxJSIbX04AAsFZAAIriOlKdZ7YVSn1NTs2BA'  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –ø—É—Ç—å –∫ –≤–∞—à–µ–º—É –ª–æ–∫–∞–ª—å–Ω–æ–º—É –≤–∏–¥–µ–æ—Ñ–∞–π–ª—É –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —É—Ä–æ–∫–∞
    bonus_video_id = 'BAACAgIAAxkBAAMYZ11kib8_TyrWZPzmlXGk72hvLjgAAiRZAAIriOlKYTX4pkbCFG02BA'
    try:
#         bot.send_video(user_id, video_id, caption="""\
#         24 —á–∞—Å–∞ –ø—Ä–æ—à–ª–æ, –¥–µ—Ä–∂–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–π —É—Ä–æ–∫
#
# –°–Ω–∏–º–∞–µ–º –≤–∞—à–∏ —Ä–æ–∑–æ–≤—ã–µ –æ—á–∫–∏: –æ–±—Å—É–∂–¥–∞–µ–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ª–∏—á–Ω—ã–º –±—Ä–µ–Ω–¥–æ–º, –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∏ —Ü–µ–ª–∏
# """)
        bot.send_message(user_id, "–£—Ä–æ–∫ 3")
    except requests.exceptions.ReadTimeout:
        bot.send_message(user_id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤–∏–¥–µ–æ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

    try:
        # bot.send_video(user_id, bonus_video_id, caption="""\
        # –ë–æ–Ω—É—Å–Ω—ã–π —É—Ä–æ–∫, –∫–∞–∫ –∏ –æ–±–µ—â–∞–ª–∞
        #
        # –ö–∞–∫ —è —Ä–∞–∑–≤–∏–≤–∞–ª–∞ –ª–∏—á–Ω—ã–π –±—Ä–µ–Ω–¥, –∫–∞–∫ –æ–Ω –ø–æ–º–µ–Ω—è–ª –∂–∏–∑–Ω—å –º–æ–µ–π –∫–ª–∏–µ–Ω—Ç–∫–∏
        # """)
        bot.send_message(user_id, "–£—Ä–æ–∫ 4")
        markup = types.InlineKeyboardMarkup()
        button2 = types.InlineKeyboardButton("–ü–æ–ª—É—á–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫", callback_data='get_gift')
        markup.add(button2)
        bot.send_message(user_id, """\
                –ü–æ–¥–∞—Ä–æ–∫ üéÅ –°–¢–†–ê–¢–ï–ì–ò–ß–ï–°–ö–ê–Ø –°–ï–°–°–ò–Ø —Å–æ –º–Ω–æ–π –∏ –º–æ–µ–π –∫–æ–º–∞–Ω–¥–æ–π 
–î–æ—Å—Ç—É–ø–Ω–∞ 24 —á–∞—Å–∞ —Å –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥–∞—Ä–∫–∞!
                """, reply_markup=markup)
        users_dataset[f'{chat_id}']["secondl"] = 0
        with open(USERS_FILE, 'w') as file:
            json.dump(users_dataset, file, indent=4)
    except requests.exceptions.ReadTimeout:
        bot.send_message(user_id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤–∏–¥–µ–æ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

def send_check_time_keyboard(chat_id):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button = types.KeyboardButton("–ö–æ–≥–¥–∞ —è –ø–æ–ª—É—á—É —Å–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–∫")
    markup.add(button)
    bot.send_message(chat_id, "(–¢—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—à—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–≥–¥–∞ —Ç—ã –ø–æ–ª—É—á–∏—à—å —Å–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–∫ –Ω–∞–∂–∞–≤ –ø–æ –∫–Ω–æ–ø–æ—á–∫–µ —Å–Ω–∏–∑—É)",
                     reply_markup=markup)

@bot.message_handler(func=lambda message: True)
def handle_messages(message):
    if message.text == "–ö–æ–≥–¥–∞ —è –ø–æ–ª—É—á—É —Å–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–∫":
        for item in users_dataset.keys():
            if int(message.chat.id) == int(item):
                hours = int(users_dataset[f"{message.chat.id}"]["timetoget"])//3600
                minutes = (int(users_dataset[f"{message.chat.id}"]["timetoget"])%3600) //60
                seconds =int(users_dataset[f"{message.chat.id}"]["timetoget"])%60
                bot.send_message(message.chat.id,
                                 f"–°–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–∫ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ {hours} —á–∞—Å–æ–≤, {minutes} –º–∏–Ω—É—Ç –∏ {seconds} —Å–µ–∫—É–Ω–¥.")
            else:
                bot.send_message(message.chat.id, "–í—ã –µ—â–µ –Ω–µ –Ω–∞—á–∞–ª–∏ –∫—É—Ä—Å.")
    elif message.text == "–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å":
        with open(USERS_FILE, 'r') as file:
            users_data = json.load(file)
        users_info = "–î–∞–Ω–Ω—ã–µ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:\n"
        for user_id, data in users_data.items():
            users_info += f"–¢–µ–ª–µ—Ñ–æ–Ω: {data['phone_number']}\n"
            users_info += f"–°—Å—ã–ª–∫–∞: @{data['user_link']}\n\n"
        bot.send_message(message.chat.id, users_info)

def is_subscribed(chat_id):
    try:
        user_status = bot.get_chat_member(CHANNEL_USERNAME, chat_id)
        return user_status.status in ['member', 'administrator', 'creator']
    except telebot.apihelper.ApiTelegramException as e:
        if e.result_json['description'] == 'Bad Request: user not found':
            return False
        else:
            raise e

@bot.message_handler(content_types=['document', 'photo', 'video', 'audio', 'voice', 'video_note', 'sticker'])
def handle_files(message):
    file_id = None

    if message.document:
        file_id = message.document.file_id
    elif message.photo:
        file_id = message.photo[-1].file_id  # –ë–µ—Ä–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç, —Ç–∞–∫ –∫–∞–∫ —Ñ–æ—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤ —Ä–∞–∑–Ω—ã—Ö —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è—Ö
    elif message.video:
        file_id = message.video.file_id
    elif message.audio:
        file_id = message.audio.file_id
    elif message.voice:
        file_id = message.voice.file_id
    elif message.video_note:
        file_id = message.video_note.file_id
    elif message.sticker:
        file_id = message.sticker.file_id

    if file_id:
        # –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ file_id, –Ω–∞–ø—Ä–∏–º–µ—Ä, –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∏–ª–∏ –≤ —Ñ–∞–π–ª
        bot.reply_to(message, f"file_id –≤–∞—à–µ–≥–æ —Ñ–∞–π–ª–∞: {file_id}")

def send_messages_to_all_users():
    while True:
        for key in users_dataset.keys():
            if users_dataset[f'{key}']["timetoget"]==0:
                if users_dataset[f'{key}']["secondl"]==0:
                    print(None)
                elif users_dataset[f'{key}']["secondl"]==1:
                    send_second_video(users_dataset[f'{key}']["user_id"], users_dataset[f'{key}']["chat_id"])
                    users_dataset[f'{key}']["secondl"]=2
                    print(f"Second lesson send to {users_dataset[f'{key}']['user_link']}")
                elif users_dataset[f'{key}']["secondl"]==2:
                    send_third_video(users_dataset[f'{key}']["user_id"], users_dataset[f'{key}']["chat_id"])
                    print(f"Third lesson send to {users_dataset[f'{key}']['user_link']}")
        with open(USERS_FILE, 'w') as file:
            json.dump(users_dataset, file, indent=4)
        time.sleep(10)

def minus_time():
    while True:
        for key in users_dataset.keys():
            if users_dataset[f'{key}']["timetoget"]!=0:
                users_dataset[f'{key}']["timetoget"]-=10
            print(f"{users_dataset[f'{key}']['timetoget']}")
            print("Changed!")
        with open(USERS_FILE, 'w') as file:
            json.dump(users_dataset, file, indent=4)
            print("Saved")
        time.sleep(10)

threading.Thread(target=send_messages_to_all_users).start()
threading.Thread(target=minus_time).start()

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.infinity_polling()
